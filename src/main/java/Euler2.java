
public class Euler2 extends Euler {
    /*
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
     */
    private final int LIMIT = 4000000;
    @Override
    public String run() {
        int sum = 0;

        int previous = 1;
        int current = 2;
        int next;

        while(!limitedReached(current)){
            if(current % 2 == 0) sum += current;
            next = previous + current;
            previous = current;
            current = next;
        }
        return String.valueOf(sum);
    }

    private boolean limitedReached(int current) {
        return current >= LIMIT ? true : false;
    }
}
